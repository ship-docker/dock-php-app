#!/usr/bin/env bash


# Bail out on first error
set -e

# Get the directory of the build script
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"



# Package the app
cd $DIR/../
# "archive" gives us useful tools - we can use .gitattributes
# to `export-ignore` extraneous files
git archive --format=tar --worktree-attributes $GITHUB_SHA | tar -xf -  -C $DIR/app/packaged

# Production Build Steps
## (Decision between export-ignore'ing docker/develop command or not)
cd $DIR/app/packaged
./develop composer install --no-dev
# ./develop yarn install
# ./develop gulp --production

# Get the production .env file & oAuth keys
## This assumes we're running in Jenkins as user "jenkins"
aws s3 cp s3://myshippingdocker-secrets/env-prod .env
aws s3 cp s3://myshippingdocker-secrets/oauth-private.key storage/oauth-private.key
aws s3 cp s3://myshippingdocker-secrets/oauth-public.key storage/oauth-public.key

# Build the Docker image with latest code
cd $DIR/app
docker build \
    -t localhost:5000/myshippingdocker/app:latest \
    -t localhost:5000/myshippingdocker/app:$GITHUB_SHA .

docker push localhost:5000/myshippingdocker/app:latest
docker push localhost:5000/myshippingdocker/app:$GITHUB_SHA
